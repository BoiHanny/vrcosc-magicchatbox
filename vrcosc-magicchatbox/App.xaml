<Application
    x:Class="vrcosc_magicchatbox.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:vrcosc_magicchatbox.Classes"
    xmlns:local1="clr-namespace:vrcosc_magicchatbox"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
    <Application.Resources>
        <DropShadowEffect
            x:Key="TextBlockShadowEffect"
            BlurRadius="10"
            Opacity="1"
            ShadowDepth="0"
            Color="#251153" />

        <!--  Image Shadow Effect  -->
        <DropShadowEffect
            x:Key="ImageShadowEffect"
            BlurRadius="25"
            Opacity="0.4"
            ShadowDepth="0"
            Color="#251153" />
        <Style x:Key="CircleButton" TargetType="Button">
            <Setter Property="Background" Value="#3D217A" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="30">
                            <ContentPresenter
                                Margin="4"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#2C1265" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#230E53" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpandCollapseToggleButtonStyle" TargetType="ToggleButton">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="#B7BBD4" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Padding" Value="5,0,5,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <Border x:Name="border" Background="{TemplateBinding Background}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Image
                                        x:Name="SymbolImage"
                                        Grid.Column="0"
                                        Width="16"
                                        Height="16"
                                        Margin="10,0,0,0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        Source="/Img/Icons/Plus_ico.png" />
                                    <TextBlock
                                        x:Name="CustomTextContentControl"
                                        Grid.Column="1"
                                        Margin="8,0,10,0"
                                        VerticalAlignment="Center"
                                        FontSize="13"
                                        Foreground="#B7BBD4"
                                        Text="{TemplateBinding Tag}" />
                                </Grid>
                            </Border>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimation
                                                Storyboard.TargetName="border"
                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                To="#FF4A4063"
                                                Duration="0" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimation
                                                Storyboard.TargetName="border"
                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                To="#FF2A2043"
                                                Duration="0" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="SymbolImage" Property="Source" Value="/Img/Icons/Plus_ico.png" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="SymbolImage" Property="Source" Value="/Img/Icons/Min_ico.png" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Content" Value="{x:Null}" />
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Content" Value="{x:Null}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ExpandCollapseToggleButtonStyleDEV" TargetType="ToggleButton">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="#B7BBD4" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Padding" Value="5,0,5,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <Border x:Name="border" Background="{TemplateBinding Background}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Image
                                        x:Name="SymbolImage"
                                        Grid.Column="0"
                                        Width="16"
                                        Height="16"
                                        Margin="10,0,0,0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        Source="/Img/Icons/Plus_ico.png" />
                                    <TextBlock
                                        x:Name="CustomTextContentControl"
                                        Grid.Column="1"
                                        Margin="8,0,10,0"
                                        VerticalAlignment="Center"
                                        FontSize="13"
                                        Foreground="#B7BBD4"
                                        Text="{TemplateBinding Tag}" />
                                </Grid>
                            </Border>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimation
                                                Storyboard.TargetName="border"
                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                To="#E8478A"
                                                Duration="0" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimation
                                                Storyboard.TargetName="border"
                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                To="#B52F66"
                                                Duration="0" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="SymbolImage" Property="Source" Value="/Img/Icons/Plus_ico.png" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="SymbolImage" Property="Source" Value="/Img/Icons/Min_ico.png" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Content" Value="{x:Null}" />
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Content" Value="{x:Null}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle
                            Margin="2"
                            SnapsToDevicePixels="true"
                            Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                            StrokeDashArray="1 2"
                            StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#240E54" />
        <SolidColorBrush x:Key="Button.Static.Border" Color="#240E54" />
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#191551" />
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#191551" />
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#13103d" />
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#13103d" />
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FF2F2F2F" />
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FF2F2F2F" />
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="Gray" />
        <Style x:Key="MenuItemStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.MouseOver.Background}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Pressed.Background}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Pressed.Border}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Disabled.Background}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}" />
                                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle
                            Margin="2"
                            SnapsToDevicePixels="true"
                            Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                            StrokeDashArray="1 2"
                            StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background1" Color="#FFDDDDDD" />
        <SolidColorBrush x:Key="Button.Static.Border1" Color="#FF707070" />
        <SolidColorBrush x:Key="Button.MouseOver.Background1" Color="#C42B1C" />
        <SolidColorBrush x:Key="Button.MouseOver.Border1" Color="#C42B1C" />
        <SolidColorBrush x:Key="Button.Pressed.Background1" Color="#E1ABA5" />
        <SolidColorBrush x:Key="Button.Pressed.Border1" Color="#E1ABA5" />
        <Style x:Key="FocusVisual2">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle
                            Margin="2"
                            SnapsToDevicePixels="true"
                            Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                            StrokeDashArray="1 2"
                            StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background2" Color="#FFDDDDDD" />
        <SolidColorBrush x:Key="Button.Static.Border2" Color="#FF707070" />
        <SolidColorBrush x:Key="Button.Disabled.Background2" Color="#FFF4F4F4" />
        <SolidColorBrush x:Key="Button.Disabled.Border2" Color="#FFADB2B5" />
        <SolidColorBrush x:Key="Button.Disabled.Foreground2" Color="#FF838383" />
        <Style x:Key="FocusVisual3">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle
                            Margin="2"
                            SnapsToDevicePixels="true"
                            Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                            StrokeDashArray="1 2"
                            StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background3" Color="#FF240E54" />
        <SolidColorBrush x:Key="Button.Static.Border3" Color="#FF240E54" />
        <SolidColorBrush x:Key="Button.MouseOver.Background2" Color="#191551" />
        <SolidColorBrush x:Key="Button.MouseOver.Border2" Color="#191551" />
        <SolidColorBrush x:Key="Button.Pressed.Background2" Color="#13103d" />
        <SolidColorBrush x:Key="Button.Pressed.Border2" Color="#13103d" />
        <SolidColorBrush x:Key="Button.Disabled.Background3" Color="#FF2F2F2F" />
        <SolidColorBrush x:Key="Button.Disabled.Border3" Color="#FF2F2F2F" />
        <SolidColorBrush x:Key="Button.Disabled.Foreground3" Color="#FF838383" />
        <Style x:Key="Status_Button_style_Small" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual3}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background3}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border3}" />
            <Setter Property="Foreground" Value="#FFD2CDDC" />
            <Setter Property="Width" Value="60" />
            <Setter Property="Height" Value="20" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Visibility" Value="Collapsed" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3"
                            SnapsToDevicePixels="true">
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding InAppAction}" Value="Chat" />
                                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=Tag}" Value="Chat" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Visible" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding InAppAction}" Value="Status" />
                                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=Tag}" Value="Status" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Visible" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding InAppAction}" Value="System" />
                                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=Tag}" Value="System" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Visible" />
                            </MultiDataTrigger>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.MouseOver.Background2}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border2}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Pressed.Background2}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Pressed.Border2}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Disabled.Background3}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border3}" />
                                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground3}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="Sort_Button_style" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual3}" />
            <Setter Property="Background" Value="{StaticResource Button.MouseOver.Background2}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border3}" />
            <Setter Property="Foreground" Value="#FFD2CDDC" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="5,3" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3"
                            SnapsToDevicePixels="true">
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.MouseOver.Background2}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border2}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="#1B0D3C" />
                                <Setter TargetName="border" Property="BorderBrush" Value="#1B0D3C" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Disabled.Background3}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border3}" />
                                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground3}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="LINK_Button_style" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual3}" />
            <Setter Property="Background" Value="#240F53" />
            <Setter Property="BorderBrush" Value="#240F53" />
            <Setter Property="Foreground" Value="#655689" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3"
                            SnapsToDevicePixels="true">
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="#2D1072" />
                                <Setter TargetName="border" Property="BorderBrush" Value="#2D1072" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="#371491" />
                                <Setter TargetName="border" Property="BorderBrush" Value="#371491" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="Textblock_Button_style" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual3}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Foreground" Value="#655689" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="3,1" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3"
                            SnapsToDevicePixels="true">
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="#9287AF" />
                                <Setter TargetName="border" Property="BorderBrush" Value="#ADA1CE" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="#9287AF" />
                                <Setter TargetName="border" Property="BorderBrush" Value="#ADA1CE" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="Status_Toggle_style" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual3}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background3}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border3}" />
            <Setter Property="Foreground" Value="#FFD2CDDC" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3"
                            SnapsToDevicePixels="true">
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.MouseOver.Background2}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border2}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Pressed.Background2}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Pressed.Border2}" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#228908" />
                                <Setter TargetName="border" Property="BorderBrush" Value="#228908" />
                                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource Button.MouseOver.Background2}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="UpdatedGreenButtonStyle" TargetType="Button">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual3}" />
            <Setter Property="Background" Value="#343541" />
            <Setter Property="BorderBrush" Value="Gray" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3"
                            SnapsToDevicePixels="true">
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="#28A745" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="#2D2F36" />
                                <Setter TargetName="border" Property="BorderBrush" Value="#1E7E34" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="#1C7430" />
                                <Setter TargetName="border" Property="BorderBrush" Value="#19692C" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Background" Value="#6C757D" />
                                <Setter TargetName="border" Property="BorderBrush" Value="#5A6268" />
                                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="#ADB5BD" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="Status_Button_style" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual3}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background3}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border3}" />
            <Setter Property="Foreground" Value="#FFD2CDDC" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3"
                            SnapsToDevicePixels="true">
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.MouseOver.Background2}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border2}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Pressed.Background2}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Pressed.Border2}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Disabled.Background3}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border3}" />
                                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground3}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="SubtractButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual2}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background2}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border2}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="#FF3E1E82" />
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF3E1E82" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="#BF6341AD" />
                                <Setter TargetName="border" Property="BorderBrush" Value="#BF6341AD" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Disabled.Background2}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border2}" />
                                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground2}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Disabled.Background1" Color="#FFF4F4F4" />
        <SolidColorBrush x:Key="Button.Disabled.Border1" Color="#3FADB2B5" />
        <SolidColorBrush x:Key="Button.Disabled.Foreground1" Color="#3F838383" />
        <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background1}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.MouseOver.Background1}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border1}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Pressed.Background1}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Pressed.Border1}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Disabled.Background1}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border1}" />
                                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground1}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="GlowyToggleButtonDT" TargetType="{x:Type ToggleButton}">
            <!--  Base properties for the toggle button  -->
            <Setter Property="Background" Value="#3A3644" />
            <Setter Property="Foreground" Value="#82829B" />
            <Setter Property="RenderOptions.BitmapScalingMode" Value="NearestNeighbor" />
            <Setter Property="FontSize" Value="11" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="FontFamily" Value="Bahnschrift SemiLight" />

            <!--  Define the ControlTemplate  -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <!--  Main container: a Grid holding the base content and the overlay border  -->
                        <Grid>
                            <!--  Base content border that provides background and rounded corners  -->
                            <Border
                                x:Name="baseBorder"
                                Background="{TemplateBinding Background}"
                                CornerRadius="4"
                                SnapsToDevicePixels="True">
                                <Grid>
                                    <!--  TextBlock to display the button's content  -->
                                    <TextBlock
                                        x:Name="buttonText"
                                        Padding="0,2,0,0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Foreground="{TemplateBinding Foreground}"
                                        Text="{TemplateBinding Content}" />
                                </Grid>
                            </Border>

                            <!--
                                Overlay border for the gradient effect. This border is drawn over the baseBorder
                                but does not affect the measured size of the button.
                            -->
                            <Border
                                x:Name="gradientOverlay"
                                Background="Transparent"
                                BorderThickness="1.5"
                                CornerRadius="4"
                                IsHitTestVisible="False"
                                Opacity="0"
                                SnapsToDevicePixels="True">
                                <!--  Define a horizontal LinearGradientBrush  -->
                                <Border.BorderBrush>
                                    <LinearGradientBrush StartPoint="1,0" EndPoint="0,1">
                                        <!--  Red color at the top-right corner  -->
                                        <GradientStop Offset="0" Color="#FF54B955" />
                                        <!--  Maintain red briefly to ensure a solid red in the corner  -->
                                        <GradientStop Offset="0.7" Color="Transparent" />
                                        <!--  Fade out to Transparent  -->
                                        <GradientStop Offset="1" Color="Transparent" />
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                            </Border>
                        </Grid>

                        <!--  Visual State Triggers  -->
                        <ControlTemplate.Triggers>
                            <!--  MouseOver trigger: changes the base background when the mouse hovers  -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="baseBorder" Property="Background" Value="#322E3A" />
                            </Trigger>

                            <!--  Checked trigger: changes colors and applies a drop shadow when the button is toggled  -->
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="baseBorder" Property="Background" Value="#9E82DD" />
                                <Setter TargetName="buttonText" Property="Foreground" Value="#312844" />
                                <Setter TargetName="baseBorder" Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect
                                            BlurRadius="9"
                                            ShadowDepth="0"
                                            Color="#B4A4DB" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>

                            <!--  MultiTrigger for when both MouseOver and IsChecked are true  -->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsChecked" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="baseBorder" Property="Background" Value="#A78FE0" />
                            </MultiTrigger>

                            <!--  DataTrigger: when IsVRRunning is false, show the gradient overlay  -->
                            <DataTrigger Binding="{Binding IsVRRunning}" Value="false">
                                <Setter TargetName="gradientOverlay" Property="Opacity" Value="1" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="GlowyToggleButtonVR" TargetType="{x:Type ToggleButton}">
            <!--  Base properties for the toggle button  -->
            <Setter Property="Background" Value="#3A3644" />
            <Setter Property="Foreground" Value="#82829B" />
            <Setter Property="RenderOptions.BitmapScalingMode" Value="NearestNeighbor" />
            <Setter Property="FontSize" Value="11" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="FontFamily" Value="Bahnschrift SemiLight" />

            <!--  Define the ControlTemplate  -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <!--  Main container: a Grid holding the base content and the overlay border  -->
                        <Grid>
                            <!--  Base content border that provides background and rounded corners  -->
                            <Border
                                x:Name="baseBorder"
                                Background="{TemplateBinding Background}"
                                CornerRadius="4"
                                SnapsToDevicePixels="True">
                                <Grid>
                                    <!--  TextBlock to display the button's content  -->
                                    <TextBlock
                                        x:Name="buttonText"
                                        Padding="0,2,0,0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Foreground="{TemplateBinding Foreground}"
                                        Text="{TemplateBinding Content}" />
                                </Grid>
                            </Border>

                            <!--
                                Overlay border for the gradient effect. This border is drawn over the baseBorder
                                but does not affect the measured size of the button.
                            -->
                            <Border
                                x:Name="gradientOverlay"
                                Background="Transparent"
                                BorderThickness="1.5"
                                CornerRadius="4"
                                IsHitTestVisible="False"
                                Opacity="0"
                                SnapsToDevicePixels="True">
                                <!--  Define a horizontal LinearGradientBrush  -->
                                <Border.BorderBrush>
                                    <LinearGradientBrush StartPoint="1,0" EndPoint="0,1">
                                        <!--  Red color at the top-right corner  -->
                                        <GradientStop Offset="0" Color="#FFCA577C" />

                                        <GradientStop Offset="0.3" Color="#FFCA577C" />
                                        <!--  Maintain red briefly to ensure a solid red in the corner  -->
                                        <GradientStop Offset="0.7" Color="Transparent" />
                                        <!--  Fade out to Transparent  -->
                                        <GradientStop Offset="1" Color="Transparent" />
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                            </Border>
                        </Grid>

                        <!--  Visual State Triggers  -->
                        <ControlTemplate.Triggers>
                            <!--  MouseOver trigger: changes the base background when the mouse hovers  -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="baseBorder" Property="Background" Value="#322E3A" />
                            </Trigger>

                            <!--  Checked trigger: changes colors and applies a drop shadow when the button is toggled  -->
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="baseBorder" Property="Background" Value="#9E82DD" />
                                <Setter TargetName="buttonText" Property="Foreground" Value="#312844" />
                                <Setter TargetName="baseBorder" Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect
                                            BlurRadius="9"
                                            ShadowDepth="0"
                                            Color="#B4A4DB" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>

                            <!--  MultiTrigger for when both MouseOver and IsChecked are true  -->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsChecked" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="baseBorder" Property="Background" Value="#A78FE0" />
                            </MultiTrigger>

                            <!--  DataTrigger: when IsVRRunning is false, show the gradient overlay  -->
                            <DataTrigger Binding="{Binding IsVRRunning}" Value="True">
                                <Setter TargetName="gradientOverlay" Property="Opacity" Value="1" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="GlowyToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="#3A3644" />
            <Setter Property="Foreground" Value="#82829B" />
            <Setter Property="RenderOptions.BitmapScalingMode" Value="NearestNeighbor" />
            <Setter Property="FontSize" Value="11" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="FontFamily" Value="Bahnschrift SemiLight" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid>
                            <Border
                                x:Name="buttonBorder"
                                Background="{TemplateBinding Background}"
                                CornerRadius="4" />
                            <TextBlock
                                x:Name="buttonText"
                                Padding="0,2,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}"
                                Text="{TemplateBinding Content}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#322E3A" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" Value="#9E82DD" />
                                <Setter Property="Foreground" Value="#312844" />
                                <Setter TargetName="buttonBorder" Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect
                                            BlurRadius="9"
                                            ShadowDepth="0"
                                            Color="#B4A4DB" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsChecked" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="#A78FE0" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="GlowyToggleButtonMediaLink" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="#240F53" />
            <Setter Property="Foreground" Value="#D0D0D0" />
            <Setter Property="FontSize" Value="11" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="FontFamily" Value="Bahnschrift SemiLight" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid>
                            <Border
                                x:Name="buttonBorder"
                                Background="{TemplateBinding Background}"
                                CornerRadius="4" />
                            <TextBlock
                                x:Name="buttonText"
                                Padding="8,2,8,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}"
                                Text="{TemplateBinding Content}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#14092D" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" Value="#26A3FE" />
                                <Setter Property="Foreground" Value="#240F53" />
                                <Setter TargetName="buttonBorder" Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect
                                            BlurRadius="5"
                                            ShadowDepth="0"
                                            Color="#B9CAF7" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsChecked" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="#41AEFC" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style
            x:Key="GlowyToggleButtonMediaLinkWithImage"
            BasedOn="{StaticResource GlowyToggleButtonMediaLink}"
            TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid>
                            <Border
                                x:Name="buttonBorder"
                                Background="{TemplateBinding Background}"
                                CornerRadius="4" />

                            <Image
                                x:Name="buttonImage"
                                Width="20"
                                Height="20"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RenderOptions.BitmapScalingMode="NearestNeighbor"
                                Source="Img\Icons\SaveLight.png"
                                Stretch="UniformToFill" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#14092D" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" Value="#26A3FE" />
                                <Setter Property="Foreground" Value="#240F53" />
                                <Setter TargetName="buttonImage" Property="Source" Value="Img\Icons\SaveDark.png" />
                                <Setter TargetName="buttonBorder" Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect
                                            BlurRadius="5"
                                            ShadowDepth="0"
                                            Color="#B9CAF7" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsChecked" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="#41AEFC" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="GlowyButtonMediaLinkWithText" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#26A3FE" />
            <Setter Property="Foreground" Value="#240F53" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="FontFamily" Value="Bahnschrift SemiLight" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border
                                x:Name="buttonBorder"
                                Background="{TemplateBinding Background}"
                                CornerRadius="4"
                                Effect="{TemplateBinding Effect}">
                                <ContentPresenter
                                    Margin="0,2,0,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Content="{TemplateBinding Content}"
                                    TextElement.Foreground="{TemplateBinding Foreground}" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#41AEFC" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#26A3FE" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>

        <Style x:Key="GlowyButtonSoundpadWithText" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#AF00FA" />
            <Setter Property="Foreground" Value="#230E53" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="Height" Value="35" />
            <Setter Property="Opacity" Value="1" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="FontFamily" Value="Bahnschrift SemiLight" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border
                                x:Name="buttonBorder"
                                VerticalAlignment="Center"
                                Background="{TemplateBinding Background}"
                                CornerRadius="4"
                                Effect="{TemplateBinding Effect}">
                                <ContentPresenter
                                    Width="auto"
                                    Height="20"
                                    Margin="4,5,4,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Content="{TemplateBinding Content}"
                                    TextElement.Foreground="{TemplateBinding Foreground}" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!--  MouseOver Trigger  -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#BB35F4" />
                            </Trigger>

                            <!--  IsPressed Trigger  -->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#E135F4" />
                            </Trigger>

                            <!--  IsEnabled Trigger  -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5" />
                                <Setter Property="Cursor" Value="No" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>







        <Style TargetType="{x:Type ProgressBar}">
            <Setter Property="MinHeight" Value="6" />
            <Setter Property="MaxHeight" Value="6" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Grid>
                            <Border
                                Background="#7F759A"
                                BorderThickness="0"
                                CornerRadius="4">
                                <Border x:Name="PART_Track" ClipToBounds="True">
                                    <Rectangle
                                        x:Name="PART_Indicator"
                                        HorizontalAlignment="Left"
                                        Fill="#2D1267"
                                        RadiusX="4"
                                        RadiusY="4" />
                                </Border>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsIndeterminate" Value="True">
                                <Setter TargetName="PART_Indicator" Property="Visibility" Value="Hidden" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MediaPlayerProgress" TargetType="{x:Type ProgressBar}">
            <Setter Property="MinHeight" Value="6" />
            <Setter Property="MaxHeight" Value="6" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Grid>
                            <Border
                                Background="#230E52"
                                BorderThickness="0"
                                CornerRadius="5">
                                <Border x:Name="PART_Track" ClipToBounds="True">
                                    <Rectangle
                                        x:Name="PART_Indicator"
                                        HorizontalAlignment="Left"
                                        RadiusX="5"
                                        RadiusY="5">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="1.5,1">
                                                <GradientStop Color="#FF26A3FE" />
                                                <GradientStop Offset="1" Color="#FFA326FE" />
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>

                                </Border>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsIndeterminate" Value="True">
                                <Setter TargetName="PART_Indicator" Property="Visibility" Value="Hidden" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style
            x:Key="Status_Button_style_Shadow"
            BasedOn="{StaticResource Status_Button_style}"
            TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3"
                            SnapsToDevicePixels="true">
                            <Border.Effect>
                                <DropShadowEffect
                                    x:Name="ShadowEffect"
                                    BlurRadius="11"
                                    Direction="0"
                                    Opacity="0"
                                    ShadowDepth="0"
                                    Color="#D596FF" />
                            </Border.Effect>
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <!--  ControlTemplate Triggers  -->
                            <Trigger Property="local:ButtonProperties.ShadowTrigger" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="ShadowEffect"
                                                Storyboard.TargetProperty="Opacity"
                                                From="0"
                                                To="1"
                                                Duration="0:0:0.3" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="ShadowEffect"
                                                Storyboard.TargetProperty="Opacity"
                                                From="1"
                                                To="0"
                                                Duration="0:0:0.5" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="StyleButtonTransparent" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="5" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual5">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle
                            Margin="2"
                            SnapsToDevicePixels="true"
                            Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                            StrokeDashArray="1 2"
                            StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="OptionMarkFocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle
                            Margin="14,0,0,0"
                            SnapsToDevicePixels="true"
                            Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                            StrokeDashArray="1 2"
                            StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.Static.Background1" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="OptionMark.Static.Border1" Color="#FF707070" />
        <SolidColorBrush x:Key="OptionMark.Static.Glyph1" Color="#FF212121" />
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background1" Color="#FFF3F9FF" />
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border1" Color="#FF5593FF" />
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph1" Color="#FF212121" />
        <SolidColorBrush x:Key="OptionMark.Pressed.Background1" Color="#FFD9ECFF" />
        <SolidColorBrush x:Key="OptionMark.Pressed.Border1" Color="#FF3C77DD" />
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph1" Color="#FF212121" />
        <SolidColorBrush x:Key="OptionMark.Disabled.Background1" Color="#FFE6E6E6" />
        <SolidColorBrush x:Key="OptionMark.Disabled.Border1" Color="#FFBCBCBC" />
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph1" Color="#FF707070" />

        <Style x:Key="SettingsCheckbox" TargetType="{x:Type CheckBox}">
            <Setter Property="SnapsToDevicePixels" Value="False" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="RenderOptions.BitmapScalingMode" Value="NearestNeighbor" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Border Background="Transparent">
                            <Border.Effect>
                                <DropShadowEffect
                                    BlurRadius="10"
                                    Direction="0"
                                    Opacity="0.8"
                                    RenderingBias="Performance"
                                    ShadowDepth="0"
                                    Color="black" />
                            </Border.Effect>
                            <BulletDecorator x:Name="BulletDecoratorRoot">
                                <BulletDecorator.Bullet>
                                    <Border
                                        x:Name="Border"
                                        Width="20"
                                        Height="20"
                                        Background="#FF7D7397"
                                        BorderBrush="#FF7D7397"
                                        BorderThickness="1"
                                        ClipToBounds="True">
                                        <Path
                                            x:Name="CheckMark"
                                            Width="12"
                                            Height="12"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Data="M27.903015,0L32,4.0970465 12.369019,23.728029 11.685974,24.520998 0,14.441042 3.7819824,10.054994 11.330017,16.567019z"
                                            Fill="#FF240E54"
                                            Stretch="Fill"
                                            Stroke="#FF240E54"
                                            StrokeEndLineCap="Round"
                                            StrokeStartLineCap="Round"
                                            StrokeThickness="1" />
                                    </Border>
                                </BulletDecorator.Bullet>
                                <ContentPresenter
                                    Margin="10,0,0,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    RecognizesAccessKey="True" />
                            </BulletDecorator>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter Property="BorderBrush" Value="White" />
                                <Setter TargetName="Border" Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect
                                            BlurRadius="10"
                                            Opacity="1"
                                            ShadowDepth="0"
                                            Color="SkyBlue" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="BorderBrush" Value="#FFA9A9A9" />
                                <Setter TargetName="CheckMark" Property="Fill" Value="#FFD3D3D3" />
                                <Setter TargetName="CheckMark" Property="Stroke" Value="#FFD3D3D3" />
                                <Setter TargetName="Border" Property="Effect" Value="{x:Null}" />
                                <Setter TargetName="BulletDecoratorRoot" Property="Opacity" Value="0.6" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <SolidColorBrush x:Key="Slider.Track.Color" Color="#827D92" />
        <SolidColorBrush x:Key="Slider.Track.FilledColor" Color="#7C7295" />
        <SolidColorBrush x:Key="Slider.Static.Thumb" Color="#ABA3B7" />
        <SolidColorBrush x:Key="Slider.MouseOver.Thumb" Color="#1A1650" />
        <SolidColorBrush x:Key="Slider.Disabled.Thumb" Color="gray" />
        <SolidColorBrush x:Key="Slider.Pressed.Thumb" Color="#14113D" />
        <Style x:Key="CustomSlider" TargetType="{x:Type Slider}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Slider}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding Slider.MinHeight}" />
                            </Grid.RowDefinitions>
                            <Rectangle
                                Grid.Row="1"
                                Height="4"
                                Margin="0,0"
                                VerticalAlignment="Center"
                                Fill="{StaticResource Slider.Track.Color}" />
                            <Rectangle
                                x:Name="FilledTrack"
                                Grid.Row="1"
                                Height="4"
                                Margin="0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Fill="{StaticResource Slider.Track.FilledColor}" />
                            <Track x:Name="PART_Track" Grid.Row="1">
                                <Track.Thumb>
                                    <Thumb
                                        x:Name="Thumb"
                                        Background="{StaticResource Slider.Static.Thumb}"
                                        BorderBrush="{StaticResource Slider.Static.Thumb}"
                                        BorderThickness="1">
                                        <Thumb.Template>
                                            <ControlTemplate>
                                                <Rectangle
                                                    x:Name="square"
                                                    Width="8"
                                                    Height="12"
                                                    Fill="{TemplateBinding Background}"
                                                    Stroke="{TemplateBinding BorderBrush}"
                                                    StrokeThickness="{TemplateBinding BorderThickness}" />
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="true">
                                                        <Setter TargetName="square" Property="Fill" Value="{StaticResource Slider.MouseOver.Thumb}" />
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="false">
                                                        <Setter TargetName="square" Property="Fill" Value="{StaticResource Slider.Disabled.Thumb}" />
                                                        <Setter TargetName="square" Property="Stroke" Value="{StaticResource Slider.Disabled.Track}" />
                                                    </Trigger>
                                                    <Trigger Property="IsMouseCaptureWithin" Value="true">
                                                        <Setter TargetName="square" Property="Fill" Value="{StaticResource Slider.Pressed.Thumb}" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Thumb.Template>
                                    </Thumb>
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual4">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle
                            Margin="2"
                            SnapsToDevicePixels="true"
                            Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                            StrokeDashArray="1 2"
                            StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle
                            Margin="14,0,0,0"
                            SnapsToDevicePixels="true"
                            Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                            StrokeDashArray="1 2"
                            StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070" />
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121" />
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF" />
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF" />
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121" />
        <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF" />
        <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD" />
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121" />
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6" />
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC" />
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070" />
        <Style x:Key="Switch" TargetType="{x:Type CheckBox}">
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="RenderOptions.BitmapScalingMode" Value="NearestNeighbor" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <StackPanel Orientation="Horizontal">
                            <Grid>
                                <Border
                                    Width="45"
                                    Height="20"
                                    Margin="5,0"
                                    Background="LightGray"
                                    CornerRadius="10"
                                    RenderOptions.BitmapScalingMode="NearestNeighbor">
                                    <Border.Effect>
                                        <DropShadowEffect
                                            BlurRadius="25"
                                            Opacity="0.4"
                                            ShadowDepth="0"
                                            Color="#251153" />
                                    </Border.Effect>
                                </Border>
                                <Border
                                    x:Name="button"
                                    Width="25"
                                    Height="25"
                                    HorizontalAlignment="Left"
                                    CornerRadius="12.5" />
                            </Grid>
                            <ContentPresenter
                                x:Name="content"
                                Margin="10,0,0,0"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Content}" />
                        </StackPanel>
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="right">
                                <ThicknessAnimation
                                    Storyboard.TargetName="button"
                                    Storyboard.TargetProperty="Margin"
                                    From="0,0,0,0"
                                    To="28,0,0,0"
                                    Duration="0:0:0.15">
                                    <ThicknessAnimation.EasingFunction>
                                        <CircleEase EasingMode="EaseOut" />
                                    </ThicknessAnimation.EasingFunction>
                                </ThicknessAnimation>
                            </Storyboard>
                            <Storyboard x:Key="left">
                                <ThicknessAnimation
                                    Storyboard.TargetName="button"
                                    Storyboard.TargetProperty="Margin"
                                    From="28,0,0,0"
                                    To="0,0,0,0"
                                    Duration="0:0:0.15">
                                    <ThicknessAnimation.EasingFunction>
                                        <CircleEase EasingMode="EaseOut" />
                                    </ThicknessAnimation.EasingFunction>
                                </ThicknessAnimation>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Trigger.ExitActions>
                                    <RemoveStoryboard BeginStoryboardName="leftt" />
                                    <BeginStoryboard x:Name="rightt" Storyboard="{StaticResource right}" />
                                </Trigger.ExitActions>
                                <Setter TargetName="button" Property="Background" Value="#7D7397" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Trigger.ExitActions>
                                    <RemoveStoryboard BeginStoryboardName="rightt" />
                                    <BeginStoryboard x:Name="leftt" Storyboard="{StaticResource left}" />
                                </Trigger.ExitActions>
                                <Setter TargetName="button" Property="Background" Value="#1ED760" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--  Scrollbar Thumbs  -->
        <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid x:Name="Grid">
                            <Rectangle
                                Width="Auto"
                                Height="Auto"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Fill="Transparent" />
                            <Border
                                x:Name="Rectangle1"
                                Width="Auto"
                                Height="Auto"
                                Margin="0,5"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Background="{TemplateBinding Background}"
                                CornerRadius="5"
                                Cursor="Hand" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Tag" Value="Horizontal">
                                <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                                <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--  ScrollBars  -->
        <Style x:Key="FocusVisual6">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle
                            Margin="2"
                            SnapsToDevicePixels="true"
                            Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                            StrokeDashArray="1 2"
                            StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background4" Color="#FFDDDDDD" />
        <SolidColorBrush x:Key="Button.Static.Border4" Color="#FF707070" />
        <SolidColorBrush x:Key="Button.MouseOver.Background3" Color="#FFBEE6FD" />
        <SolidColorBrush x:Key="Button.MouseOver.Border3" Color="#FF3C7FB1" />
        <SolidColorBrush x:Key="Button.Pressed.Background3" Color="#FFC4E5F6" />
        <SolidColorBrush x:Key="Button.Pressed.Border3" Color="#FF2C628B" />
        <SolidColorBrush x:Key="Button.Disabled.Background4" Color="#FFF4F4F4" />
        <SolidColorBrush x:Key="Button.Disabled.Border4" Color="#FFADB2B5" />
        <SolidColorBrush x:Key="Button.Disabled.Foreground4" Color="#FF838383" />

        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
            <Setter Property="Foreground" Value="{StaticResource Button.Static.Background3}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Width" Value="8" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid
                            x:Name="GridRoot"
                            Width="8"
                            Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.00001*" />
                            </Grid.RowDefinitions>
                            <Track
                                x:Name="PART_Track"
                                Grid.Row="0"
                                Focusable="false"
                                IsDirectionReversed="true">
                                <Track.Thumb>
                                    <Thumb
                                        x:Name="Thumb"
                                        Background="{TemplateBinding Foreground}"
                                        Style="{DynamicResource ScrollThumbs}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton
                                        x:Name="PageUp"
                                        Command="ScrollBar.PageDownCommand"
                                        Focusable="false"
                                        Opacity="0" />
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton
                                        x:Name="PageDown"
                                        Command="ScrollBar.PageUpCommand"
                                        Focusable="false"
                                        Opacity="0" />
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                                <Setter TargetName="Thumb" Property="Background" Value="{DynamicResource ButtonSelectBrush}" />
                            </Trigger>
                            <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                                <Setter TargetName="Thumb" Property="Background" Value="{DynamicResource DarkBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="Orientation" Value="Horizontal">
                                <Setter TargetName="GridRoot" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="PART_Track" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Width" Value="Auto" />
                                <Setter Property="Height" Value="8" />
                                <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                                <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ComboBox.Static.Background" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0.0" Color="#FFF0F0F0" />
            <GradientStop Offset="1.0" Color="#FFE5E5E5" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC" />
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060" />
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3" />
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent" />
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent" />
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0.0" Color="#FFECF4FC" />
            <GradientStop Offset="1.0" Color="#FFDCECFC" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA" />
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000" />
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA" />
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0.0" Color="#FFEBF4FC" />
            <GradientStop Offset="1.0" Color="#FFDCECFC" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA" />
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0.0" Color="#FFDAECFC" />
            <GradientStop Offset="1.0" Color="#FFC4E0FC" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5" />
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000" />
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5" />
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0.0" Color="#FFDAEBFC" />
            <GradientStop Offset="1.0" Color="#FFC4E0FC" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5" />
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0" />
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9" />
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF" />
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF" />
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent" />
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent" />
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="ClickMode" Value="Press" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border
                            x:Name="templateRoot"
                            Background="{StaticResource ComboBox.Static.Background}"
                            BorderBrush="{StaticResource ComboBox.Static.Border}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                            <Border
                                x:Name="splitBorder"
                                Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                Margin="0"
                                HorizontalAlignment="Right"
                                BorderBrush="Transparent"
                                BorderThickness="1"
                                SnapsToDevicePixels="true">
                                <Path
                                    x:Name="arrow"
                                    Margin="0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"
                                    Fill="{StaticResource ComboBox.Static.Glyph}" />
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Static.Editable.Background}" />
                                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Static.Editable.Border}" />
                                <Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.Static.Editable.Button.Background}" />
                                <Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.Static.Editable.Button.Border}" />
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="arrow" Property="Fill" Value="{StaticResource ComboBox.MouseOver.Glyph}" />
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.MouseOver.Background}" />
                                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.MouseOver.Border}" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.MouseOver.Editable.Background}" />
                                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.MouseOver.Editable.Border}" />
                                <Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}" />
                                <Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}" />
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="arrow" Property="Fill" Value="{StaticResource ComboBox.Pressed.Glyph}" />
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true" />
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Pressed.Background}" />
                                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Pressed.Border}" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true" />
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Pressed.Editable.Background}" />
                                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Pressed.Editable.Border}" />
                                <Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}" />
                                <Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}" />
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="arrow" Property="Fill" Value="{StaticResource ComboBox.Disabled.Glyph}" />
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Disabled.Background}" />
                                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Disabled.Border}" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Disabled.Editable.Background}" />
                                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Disabled.Editable.Border}" />
                                <Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}" />
                                <Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}" />
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="20" />
                            </Grid.ColumnDefinitions>
                            <Border
                                x:Name="Border"
                                Grid.ColumnSpan="2"
                                Background="#222"
                                BorderBrush="#222"
                                BorderThickness="1"
                                CornerRadius="0" />
                            <Border
                                x:Name="Border2"
                                Grid.Column="0"
                                Margin="1"
                                Background="Transparent"
                                BorderBrush="#222"
                                BorderThickness="0,0,0,0"
                                CornerRadius="0" />
                            <Path
                                x:Name="Arrow"
                                Grid.Column="1"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="M 0 0 L 4 4 L 8 0 Z"
                                Fill="White" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#222" />
                                <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,1" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#4F4F4F" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Arrow" Property="Fill" Value="#888" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </Application.Resources>
</Application>
